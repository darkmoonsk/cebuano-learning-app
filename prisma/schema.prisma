generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  email         String        @unique
  hashedPassword String
  displayName   String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  reviewStates  ReviewState[]
  reviewEvents  ReviewEvent[]
}

model Flashcard {
  id           String        @id @map("_id")
  english      String
  cebuano      String
  partOfSpeech String
  level        String
  isActive     Boolean       @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  reviewStates ReviewState[]
  reviewEvents ReviewEvent[]
}

model ReviewState {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  userId         String      @db.ObjectId
  flashcardId    String
  easeFactor     Float
  interval       Int
  repetitions    Int
  due            DateTime
  lastReviewedAt DateTime?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  flashcard Flashcard @relation(fields: [flashcardId], references: [id], onDelete: Cascade)
}

model ReviewEvent {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  flashcardId String
  rating      String
  createdAt   DateTime @default(now())

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  flashcard Flashcard @relation(fields: [flashcardId], references: [id], onDelete: Cascade)
}
